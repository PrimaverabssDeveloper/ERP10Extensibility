<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GetFromPRIOMNIA_Approver" xml:space="preserve">
    <value>SELECT Case CDU_Atribuido 
		when '1' then CDU_Autor
		when '2' then OUS.Manager
		when '3' then case when isnull(OUS.PurchasingManager ,'') = '' then CMP.PurchasingManager else OUS.PurchasingManager end
		else AP.Approver
		end Approver
FROM CabecCompras CC
INNER JOIN @3@.dbo.PortalComprasOrganizationalUnits OUS ON OUS.OrganizationalUnit = CC.CDU_OrganizationalUnit
INNER JOIN @3@.dbo.PortalComprasCompanies CMP ON CMP.Primavera = RIGHT(DB_NAME(),len(DB_NAME())-3)
LEFT JOIN  @3@.dbo.PortalComprasApprovalProfiles AP on AP.ApprovalProfile = CC.CDU_Atribuido
WHERE CC.CDU_CodOmnia = '@1@' AND CC.TipoDoc = '@2@'</value>
  </data>
  <data name="GetFromTDU_Config" xml:space="preserve">
    <value>SELECT CDU_Empresa, CDU_Endpoint, CDU_Tenant, CDU_ClientId, CDU_ClientSecret, CDU_OmniaDB FROM TDU_TemplateProcurement_Config WHERE CDU_Empresa = @1@</value>
  </data>
  <data name="GetInternos_CDU" xml:space="preserve">
    <value>SELECT CDU_OrganizationalUnit, CDU_Autor, CDU_AutorNome FROM CabecInternos
WHERE CDU_CodOmnia = @1@</value>
  </data>
  <data name="GetInternos_CodOmniaByLineId" xml:space="preserve">
    <value>SELECT CDU_CodOmnia FROM CabecInternos CI
INNER JOIN LinhasInternos LI ON LI.IdCabecInternos = CI.Id
WHERE LI.Id = @1@</value>
  </data>
  <data name="GetInv_DocTrans" xml:space="preserve">
    <value>SELECT 1 FROM INV_DocumentosTransferencia
WHERE Documento = @1@ AND TipoTransferencia = 0
AND TransfereArmazem = 1 AND TransfereLocalizacao = 1</value>
  </data>
  <data name="InsertIntoFinancialDocumentPaymentApprovalFlow" xml:space="preserve">
    <value>INSERT INTO TDU_FinancialDocumentPaymentApprovalFlow(DocID, ApprovalProfile, Ordem, Amount) VALUES (@1@,@2@,@3@,@4@)</value>
  </data>
  <data name="StdUp" xml:space="preserve">
    <value>declare @ordem int 
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecInternos' and  Campo = 'CDU_CodOmnia')
    begin
        alter table CabecInternos
        add  CDU_CodOmnia varchar(30)
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecInternos'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecInternos','CDU_CodOmnia','OMNIA ID','','OMNIA ID',1,@ordem,null)  
    end                                        
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecInternos' and  Campo = 'CDU_OrganizationalUnit')
    begin
        alter table CabecInternos
        add  CDU_OrganizationalUnit varchar(30) 
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecInternos'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecInternos','CDU_OrganizationalUnit','U. Organizacional','','U. Organizacional',1,@ordem,null)  
    end    
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecInternos' and  Campo = 'CDU_Autor')
    begin
        alter table CabecInternos
        add  CDU_Autor varchar(30)                 
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecInternos'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecInternos','CDU_Autor','Autor','','Autor',1,@ordem,null)   
    end
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecInternos' and  Campo = 'CDU_AutorNome')
    begin
        alter table CabecInternos
        add  CDU_AutorNome varchar(100)
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecInternos'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecInternos','CDU_AutorNome','Nome Autor','','Nome Autor',1,@ordem,null) 
    end
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecCompras' and  Campo = 'CDU_CodOmnia')
    begin
        alter table CabecCompras
        add  CDU_CodOmnia varchar(30)
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecCompras'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecCompras','CDU_CodOmnia','OMNIA ID','','OMNIA ID',1,@ordem,null)   
    end                                        
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecCompras' and  Campo = 'CDU_OrganizationalUnit')
    begin
        alter table CabecCompras
        add  CDU_OrganizationalUnit varchar(30) 
                    
        CREATE NONCLUSTERED INDEX IX_CabecCompras_CDU_OrganizationalUnit ON dbo.CabecCompras (CDU_OrganizationalUnit)
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecCompras'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecCompras','CDU_OrganizationalUnit','U. Organizacional','','U. Organizacional',1,@ordem,null)   
    end    
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecCompras' and  Campo = 'CDU_Autor')
    begin
        alter table CabecCompras
        add  CDU_Autor varchar(30) 
                    
        CREATE NONCLUSTERED INDEX IX_CabecCompras_CDU_Autor ON dbo.CabecCompras (CDU_Autor)
    
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecCompras'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecCompras','CDU_Autor','Autor','','Autor',1,@ordem,null)    
    end
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecCompras' and  Campo = 'CDU_AutorNome')
    begin
        alter table CabecCompras
        add  CDU_AutorNome varchar(100) 
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecCompras'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecCompras','CDU_AutorNome','Nome Autor','','Nome Autor',1,@ordem,null)  
    end
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecCompras' and  Campo = 'CDU_Estado')
    begin
        alter table CabecCompras
        add  CDU_Estado varchar(30)
                    
        CREATE NONCLUSTERED INDEX IX_CabecCompras_CDU_Estado ON dbo.CabecCompras (CDU_Estado)
                        
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecCompras'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecCompras','CDU_Estado','Estado','','Estado',1,@ordem,null) 
    end    
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecCompras' and  Campo = 'CDU_Atribuido')
    begin
        alter table CabecCompras
        add  CDU_Atribuido varchar(100)
                    
        CREATE NONCLUSTERED INDEX IX_CabecCompras_CDU_Atribuido ON dbo.CabecCompras (CDU_Atribuido)
                        
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecCompras'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecCompras','CDU_Atribuido','Atribuído','','Atribuído',1,@ordem,null)    
    end    
    if not exists(Select Campo from [StdCamposVar] where Tabela = 'CabecCompras' and  Campo = 'CDU_Etapa')
    begin
        alter table CabecCompras
        add  CDU_Etapa int null
                    
        CREATE NONCLUSTERED INDEX IX_CabecCompras_CDU_Etapa ON dbo.CabecCompras (CDU_Etapa)
                        
        Select @ordem = max(Ordem) +1 from [StdCamposVar] where Tabela = 'CabecCompras'
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem,ValorDefeito) VALUES ('CabecCompras','CDU_Etapa','Etapa','','Etapa',1,@ordem,null)    
    end
    IF OBJECT_ID('dbo.ArtigosOMNIA') IS NULL
    BEGIN
        EXECUTE('CREATE VIEW ArtigosOMNIA as SELECT Artigo _code, Descricao _name FROM Artigo where TratamentoDim &lt;&gt; 1 and TipoComponente = 0;')
    END 
    IF OBJECT_ID('TDU_HistoricoAprovacoes', 'U') IS NULL
    begin
        CREATE TABLE TDU_HistoricoAprovacoes(
            CDU_Documento varchar(30) NOT NUll 
            ,CDU_Aprovador varchar(100) NOT NULL    
            ,CDU_Data Datetime NOT NULL default(getdate())
            ,CDU_Estado varchar(30) NOT NULL
            ,CDU_EstadoAnterior varchar(30) NULL
            ,CDU_Comentario varchar(500)
            ,CDU_Perfil varchar(100)
        )
                    
        CREATE NONCLUSTERED INDEX IX_TDU_HistoricoAprovacoes_CDU_Documento ON dbo.TDU_HistoricoAprovacoes (CDU_Documento)
                    
        insert into StdTabelasVar values('TDU_HistoricoAprovacoes','ERP'),('TDU_HistoricoAprovacoes','OFA')
                    
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem) VALUES ('TDU_HistoricoAprovacoes','CDU_Documento','Documento','','Documento',1,1)
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem) VALUES ('TDU_HistoricoAprovacoes','CDU_Aprovador','Aprovador','','Aprovador',1,2)
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem) VALUES ('TDU_HistoricoAprovacoes','CDU_Data','Data','','Data',1,3)
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem) VALUES ('TDU_HistoricoAprovacoes','CDU_Estado','Estado','','Estado',1,4)
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem) VALUES ('TDU_HistoricoAprovacoes','CDU_EstadoAnterior','Estado Anterior','','Estado Anterior',1,5)
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem) VALUES ('TDU_HistoricoAprovacoes','CDU_Comentario','Comentário','','Comentário',1,6)
        INSERT INTO [StdCamposVar] (Tabela,Campo,Descricao,Query,Texto,Visivel, Ordem) VALUES ('TDU_HistoricoAprovacoes','CDU_Perfil','Perfil','','Perfil',1,7)
                        
    end 

    IF OBJECT_ID('TDU_PaymentApprovalFlow', 'U') IS NULL 
    begin
        Create Table TDU_PaymentApprovalFlow(
            ID uniqueidentifier not null default(newID()) Primary Key ,
            ReqID nvarchar(50) not null,
            ApproverProfile nvarchar(50) not null,
            ApproverProfileName nvarchar(50) not null,
            Ordem int not null,
            Montante money not null
        )
    
        CREATE NONCLUSTERED INDEX IX_TDU_PaymentApprovalFlow_ReqID ON dbo.TDU_PaymentApprovalFlow (ReqID)
    end 
    IF OBJECT_ID('TDU_FinancialDocumentPaymentApprovalFlow', 'U') IS NULL 
    begin
        Create Table TDU_FinancialDocumentPaymentApprovalFlow(
            DocID uniqueidentifier not null,
            ApprovalProfile nvarchar(50) not null,
            Ordem int not null,
            Amount money not null,
            primary key (DocID, ApprovalProfile,Ordem)
        )   
    end
	if not exists( Select 1 from  StdCamposVar where Tabela = 'CabecCompras' and Campo = 'CDU_Incoterms')
	begin
		set @ordem = isnull((Select MAX(Ordem) from  StdCamposVar where Tabela = 'CabecCompras') ,0) + 1
		insert into StdCamposVar(Tabela,Campo,Descricao,Texto,Visivel,Ordem,ValorDefeito,Query,ExportarTTE,DadosSensiveis) 
		values('CabecCompras','CDU_Incoterms','Tipo de Incoterm','Incoterm code',1,@ordem,'','',0,0)    
	end
	IF NOT EXISTS(SELECT 1 FROM sys.columns WHERE Name = N'CDU_Incoterms' AND Object_ID = Object_ID(N'dbo.CabecCompras'))
	BEGIN
		Alter table CabecCompras
		add CDU_Incoterms NVARCHAR(3)
	END


	if not exists( Select 1 from  StdCamposVar where Tabela = 'CabecCompras' and Campo = 'CDU_IncotermsDesc')
	begin
		set @ordem = isnull((Select MAX(Ordem) from  StdCamposVar where Tabela = 'CabecCompras') ,0) + 1
		insert into StdCamposVar(Tabela,Campo,Descricao,Texto,Visivel,Ordem,ValorDefeito,Query,ExportarTTE,DadosSensiveis) 
		values('CabecCompras','CDU_IncotermsDesc','Descricao do Incoterm','Incoterm Description',1,@ordem,'','',0,0)    
	end
	IF NOT EXISTS(SELECT 1 FROM sys.columns WHERE Name = N'CDU_IncotermsDesc' AND Object_ID = Object_ID(N'dbo.CabecCompras'))
	BEGIN
		Alter table CabecCompras
		add CDU_IncotermsDesc NVARCHAR(100)
	END


	if not exists( Select 1 from  StdCamposVar where Tabela = 'CabecCompras' and Campo = 'CDU_IncotermsLocal')
	begin
		set @ordem = isnull((Select MAX(Ordem) from  StdCamposVar where Tabela = 'CabecCompras') ,0) + 1
		insert into StdCamposVar(Tabela,Campo,Descricao,Texto,Visivel,Ordem,ValorDefeito,Query,ExportarTTE,DadosSensiveis) 
		values('CabecCompras','CDU_IncotermsLocal','Local de Incoterm','Incoterm local',1,@ordem,'','',0,0)    
	end
	IF NOT EXISTS(SELECT 1 FROM sys.columns WHERE Name = N'CDU_IncotermsLocal' AND Object_ID = Object_ID(N'dbo.CabecCompras'))
	BEGIN
		Alter table CabecCompras
		add CDU_IncotermsLocal NVARCHAR(100)
	END</value>
  </data>
</root>